{
  "openapi": "3.0.0",
  "info": {
    "title": "S2D Platform, TU API v2",
    "version": "1.0",
    "contact": {
      "name": "Salah Abdullah",
      "email": "s.aldhamdy@s2dsys.com"
    },
    "description": "S2D Platform, Terminal Users API V2.",
    "license": {
      "name": "Privt",
      "url": "n"
    }
  },
  "servers": [
    {
      "url": "https://tuapi-test.s2d.app",
      "description": "Test"
    },
    {
      "description": "Production",
      "url": "https://tuapi.s2d.app"
    }
  ],
  "paths": {
    "/init": {
      "get": {
        "summary": "Your GET endpoint",
        "tags": [
          "init"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/response"
                    },
                    {
                      "properties": {
                        "rb": {
                          "type": "object",
                          "properties": {
                            "logo": {
                              "type": "string"
                            },
                            "title": {
                              "type": "string"
                            },
                            "primColor": {
                              "type": "string"
                            },
                            "secnColor": {
                              "type": "string"
                            },
                            "onesId": {
                              "type": "string"
                            },
                            "gpProgNo": {
                              "type": "string"
                            },
                            "msgs": {
                              "type": "object",
                              "properties": {
                                "about": {
                                  "type": "string"
                                },
                                "signup": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      },
                      "type": "object"
                    }
                  ]
                },
                "examples": {}
              }
            }
          },
          "404": {
            "description": "App with id {appid} was not found"
          }
        },
        "operationId": "getAppConfig",
        "description": "Get init app config, like about info, app config data ...etc",
        "parameters": [],
        "security": [
          {
            "Termainl Info": []
          }
        ]
      },
      "parameters": []
    },
    "/auth/login": {
      "parameters": [],
      "post": {
        "summary": "Login - endpoint",
        "operationId": "login",
        "responses": {
          "200": {
            "description": "Login Success, if device/browser is trusted for this user, OTP will found in response body, so must make verfiy login in background.",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/response"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "rb": {
                          "type": "object",
                          "description": "response body",
                          "required": [
                            "tid",
                            "sid"
                          ],
                          "properties": {
                            "otp": {
                              "type": "string",
                              "description": "OTP, if login device is trusted for this user server will return OTP in the response insted of SMS, so client will do verfiy login in background.",
                              "example": "123745"
                            },
                            "tid": {
                              "type": "string",
                              "example": "4001299484",
                              "description": "terminal id from server, is the id of device/browser info record in DB"
                            },
                            "sid": {
                              "type": "string",
                              "description": "session id, unique for every session"
                            }
                          }
                        }
                      },
                      "required": [
                        "rb"
                      ]
                    }
                  ]
                },
                "examples": {
                  "login-resp-example-trusted": {
                    "value": {
                      "rc": "0",
                      "rd": "string",
                      "ca": "1002",
                      "rb": {
                        "otp": "123745",
                        "tid": "4001299484"
                      }
                    }
                  },
                  "login-resp-example-not-trusted": {
                    "value": {
                      "rc": "0",
                      "rd": "string",
                      "ca": "string",
                      "rb": {
                        "otp": "123745",
                        "tid": "4001299484"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized, login info is not correct, user/acc locked or device not supported ",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          }
        },
        "description": "User login operation API",
        "security": [
          {
            "Termainl Info": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "un": {
                    "type": "string",
                    "description": "merchant user name."
                  },
                  "up": {
                    "type": "string",
                    "description": "merchant user hashed password."
                  },
                  "tdi": {
                    "$ref": "#/components/schemas/TerminalDevice"
                  }
                },
                "required": [
                  "un",
                  "up",
                  "tdi"
                ]
              },
              "examples": {
                "login-example-1": {
                  "value": {
                    "un": "7777777",
                    "up": "Baslkjsldkfj;asdlfuwl;sdfsd",
                    "tdi": {
                      "uuid": "S107358823R3",
                      "mod": "MS-780",
                      "bra": "Samsunge",
                      "osy": "Android",
                      "osv": "Pie 10",
                      "lng": "en",
                      "isRooted": true,
                      "md5": "a1b2c3d4e5f6acdea322"
                    }
                  }
                }
              }
            }
          },
          "description": ""
        },
        "tags": [
          "auth"
        ],
        "parameters": []
      }
    },
    "/signup/{sginupRef}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "sginupRef",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Your GET endpoint",
        "tags": [],
        "responses": {},
        "operationId": "get-signup-sginupRef",
        "security": [
          {
            "Termainl Info": []
          }
        ]
      },
      "post": {
        "summary": "",
        "operationId": "post-signup-sginupRef",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/users": {
      "get": {
        "summary": "Retrive User/s - GET endpoint",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/response"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "rb": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/MerchantUser"
                          }
                        }
                      }
                    }
                  ]
                },
                "examples": {}
              }
            }
          }
        },
        "operationId": "get-users",
        "description": "Get merchant users list or by get user by login",
        "tags": [
          "User"
        ]
      },
      "parameters": [],
      "post": {
        "summary": "Create User - POST endpoint",
        "operationId": "post-users-userLogin",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/response"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "rb": {
                          "$ref": "#/components/schemas/MerchantUser"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Something wronge with request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response"
                }
              }
            }
          },
          "": {
            "description": "Created Successfuly ",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/response"
                    },
                    {
                      "$ref": "#/components/schemas/MerchantUser"
                    }
                  ]
                }
              }
            }
          }
        },
        "description": "Create new user",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MerchantUser"
              }
            }
          },
          "description": "User data object, all fileds required except (useCode and useUsedLmt)."
        },
        "tags": [
          "User"
        ]
      },
      "put": {
        "summary": "Update User - PUT endpoint",
        "operationId": "put-users-userLogin",
        "responses": {
          "200": {
            "description": "Request Success.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response"
                }
              }
            }
          }
        },
        "description": "Update current user record by userLogin.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MerchantUser"
              }
            }
          }
        },
        "tags": [
          "User"
        ]
      },
      "delete": {
        "summary": "UnActivate User - DEL endpoint",
        "operationId": "delete-users-userLogin",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response"
                }
              }
            }
          }
        },
        "description": "Unactivate User .",
        "tags": [
          "User"
        ]
      }
    },
    "/auth/vLogin": {
      "post": {
        "summary": "Verify Login - POST endpoint",
        "operationId": "post-auth-verify",
        "responses": {
          "200": {
            "description": "OK, Verify Sucess",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/BaseResponse"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "rb": {
                          "type": "object",
                          "properties": {
                            "tkn": {
                              "type": "string",
                              "description": "Authoriaztion Token"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "OTP or UserLogin or SessionId expired or invalied.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          }
        },
        "tags": [
          "auth"
        ],
        "description": "Verify login for new devices/terminal with OTP sent to users mobile.\n\n*when user login from new devices/terminal system sent OTP SMS to their mobile,\nthen user use this OTP to verfiy login operation.*",
        "security": [
          {
            "Termainl Info": []
          },
          {
            "Session Info": []
          }
        ],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "otp": {
                    "type": "string",
                    "description": "OTP which sent to user mobile as SMS "
                  },
                  "mode": {
                    "type": "string",
                    "description": "mode of verify (auto/background , manual)"
                  }
                },
                "required": [
                  "otp",
                  "mode"
                ]
              }
            }
          },
          "description": ""
        }
      },
      "parameters": []
    },
    "/auth/vPin": {
      "post": {
        "summary": "Verify PIN - POST endpoint",
        "operationId": "post-auth-v-pin",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response"
                }
              }
            }
          },
          "403": {
            "description": "PIN is not valied",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response"
                },
                "examples": {}
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "pin": {
                    "type": "string"
                  }
                },
                "required": [
                  "pin"
                ]
              }
            }
          },
          "description": ""
        },
        "description": "Verify Trans PIN.",
        "tags": [
          "auth"
        ]
      },
      "parameters": []
    },
    "/profile/{profileCheckSum}": {
      "get": {
        "summary": "Termainl User Profile - GET endpoint",
        "tags": [
          "profile"
        ],
        "responses": {
          "200": {
            "description": "Accepted",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/response"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "rb": {
                          "type": "object",
                          "properties": {
                            "srv": {
                              "type": "object",
                              "properties": {
                                "opes": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "opeCode": {
                                        "type": "string"
                                      },
                                      "opeName": {
                                        "type": "string"
                                      },
                                      "opeCat": {
                                        "type": "string"
                                      },
                                      "opeItems": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "iteCode": {
                                              "type": "string"
                                            },
                                            "iteName": {
                                              "type": "string"
                                            },
                                            "iteDesc": {
                                              "type": "string"
                                            },
                                            "iteIsOpen": {
                                              "type": "string"
                                            },
                                            "iteCost": {
                                              "type": "string"
                                            },
                                            "iteMinAmt": {
                                              "type": "string"
                                            },
                                            "iteMamAmt": {
                                              "type": "string"
                                            },
                                            "iteStyCode": {
                                              "type": "string"
                                            },
                                            "iteDens": {
                                              "type": "array",
                                              "items": {
                                                "type": "object",
                                                "properties": {
                                                  "denCode": {
                                                    "type": "string"
                                                  },
                                                  "denId": {
                                                    "type": "string"
                                                  },
                                                  "denName": {
                                                    "type": "string"
                                                  },
                                                  "denCost": {
                                                    "type": "string"
                                                  },
                                                  "denUnit": {
                                                    "type": "string"
                                                  },
                                                  "denPrice": {
                                                    "type": "string"
                                                  },
                                                  "denDesc": {
                                                    "type": "string"
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "tco": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "tcoCode": {
                                    "type": "string"
                                  },
                                  "tcoName": {
                                    "type": "string"
                                  },
                                  "tcoIsFin": {
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "chkSum": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "srv"
                          ]
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "get-term-user-profile",
        "description": "Get Terminal user profile"
      },
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "profileCheckSum",
          "in": "path",
          "required": true,
          "description": "check-sum for current profile."
        }
      ]
    },
    "/auth/vcResend": {
      "parameters": [],
      "post": {
        "summary": "",
        "operationId": "post-auth-vcResend",
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Created"
          }
        },
        "description": "Verfiy Code Resend",
        "tags": [
          "auth"
        ]
      }
    },
    "/auth/rePass": {
      "post": {
        "summary": "Reset Password - endpoint",
        "operationId": "post-auth-rest-pass",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response"
                }
              }
            }
          }
        },
        "description": "Reset user password.",
        "parameters": [],
        "security": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "useLogin": {
                    "type": "string",
                    "description": "User login name"
                  },
                  "useAccIden": {
                    "type": "string",
                    "description": "User Merchant account iden."
                  }
                }
              }
            }
          }
        },
        "tags": [
          "auth"
        ]
      },
      "parameters": []
    },
    "/auth/chPass": {
      "post": {
        "summary": "Change Password - endpoint",
        "operationId": "post-auth-change-pass",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response"
                }
              }
            }
          }
        },
        "description": "Change password of user.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "oldpass": {
                    "type": "string"
                  },
                  "newpass": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "auth"
        ]
      }
    },
    "/auth/chPin": {
      "post": {
        "summary": "Change PIN - endpoint",
        "operationId": "post-auth-change-pin",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response"
                }
              }
            }
          }
        },
        "description": "Change user PIN code.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "oldpin": {
                    "type": "string"
                  },
                  "newpin": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "auth"
        ]
      }
    },
    "/mer": {
      "get": {
        "summary": "Get Merchants - endpoint",
        "tags": [
          "Merchants"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/BaseResponse"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "rb": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/Merchant"
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "get-mers",
        "description": "Retrive merchant Details or merchants list.",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "q",
            "description": "phrase to search in merchants (name, crop name, addr,..etc)"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "city",
            "description": "city code to search merchants"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "status",
            "description": "status to search merchant"
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "lmt",
            "description": "Number of page records "
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "offset",
            "description": "number of page offset"
          }
        ]
      },
      "parameters": []
    },
    "/topup": {
      "get": {
        "summary": "Get Transactions - endpoint",
        "tags": [
          "finiacial"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/response"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "rb": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/TopupTransaction"
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "get-topup",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "df"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "dt"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "status"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "ope"
          }
        ]
      }
    },
    "/mer/{merCode}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "merCode",
          "in": "path",
          "required": true,
          "description": "merchant code"
        }
      ],
      "get": {
        "summary": "Get Merchant Details - endpoint",
        "tags": [
          "Merchants"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/BaseResponse"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "rb": {
                          "$ref": "#/components/schemas/Merchant"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          }
        },
        "operationId": "get-mers-merCode",
        "description": "Get Merchant Details"
      }
    },
    "/mer/create": {
      "post": {
        "summary": "Create Merchant - endpoint",
        "operationId": "post-mer-create",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/BaseResponse"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "rb": {
                          "$ref": "#/components/schemas/Merchant"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "description": "create new merchant",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Merchant"
              }
            }
          },
          "description": ""
        },
        "tags": [
          "Merchants"
        ]
      }
    },
    "/mer/update": {
      "put": {
        "summary": "Update Merchant - endpoint",
        "operationId": "put-mer-update",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          }
        },
        "description": "Update merchant record",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Merchant"
              }
            }
          },
          "description": ""
        },
        "tags": [
          "Merchants"
        ]
      }
    },
    "/ope": {
      "post": {
        "summary": "",
        "operationId": "post-ope",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "description": "sjkf;laskdjf;lkjf",
        "parameters": [
          {
            "schema": {
              "type": "string",
              "format": "date"
            },
            "in": "header",
            "name": "sal",
            "description": "sd;klf;laskdj;flkjasdf",
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "amt": {
                    "type": "number"
                  },
                  "": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "BaseResponse": {
        "title": "Base Response",
        "type": "object",
        "description": "API base response model.",
        "x-examples": {
          "success-response": {
            "rc": "0",
            "rd": "bla bla balb"
          },
          "suspected-response": {
            "rc": "-200",
            "rd": "العملية قيد التاكيد، يرجى التحقق من حاله العمليه بعد عده ثواني",
            "ca": 3000
          },
          "repeted-response": {
            "rc": "-300",
            "rd": "string",
            "ca": 0
          },
          "failuer-response": {
            "rc": "18",
            "rd": "هذا الصنف غير مفعل",
            "ca": 0
          }
        },
        "properties": {
          "rc": {
            "type": "string",
            "enum": [
              "0",
              "30-39",
              "-100",
              "-200",
              "117",
              "60-69"
            ],
            "description": "Response code, **0 means success**, other see artical [Respons Codes]"
          },
          "rd": {
            "type": "string",
            "description": "Response description"
          },
          "ca": {
            "type": "number",
            "description": "Control action, sent from server to be executed on terminal."
          }
        },
        "required": [
          "rc",
          "rd"
        ]
      },
      "BaseRequest": {
        "title": "BaseRequest",
        "type": "object",
        "x-examples": {
          "example-1": {
            "ac": "1001",
            "tt": "WAPP or AAPP(android app) or IAPP(IOS app) or ",
            "ti": "string",
            "ai": "string",
            "av": "string",
            "un": "string",
            "": "string"
          }
        },
        "properties": {
          "ac": {
            "type": "string",
            "description": "Action Code aka operation id"
          }
        },
        "required": [
          "ac"
        ]
      },
      "User": {
        "title": "User",
        "type": "object",
        "description": "Merchant User Model",
        "x-tags": [
          "User",
          "response"
        ],
        "properties": {
          "useCode": {
            "type": "number",
            "description": "User Code (aka id)\n"
          },
          "useFName": {
            "type": "string",
            "description": "User full name"
          },
          "useLogin": {
            "type": "string",
            "description": "User login name (aka userName)\n"
          },
          "useIsActive": {
            "type": "boolean",
            "description": "User active status"
          },
          "useLimt": {
            "type": "number",
            "description": "Allowed amount to use from merchant balance"
          },
          "useUsedLmt": {
            "description": "used limit amount ",
            "type": "number"
          }
        },
        "required": [
          "useFName",
          "useLogin",
          "useIsActive"
        ]
      },
      "Merchant": {
        "title": "Merchant",
        "type": "object",
        "description": "Merchant Account Model",
        "x-examples": {
          "for-response": {
            "merCode": 1023,
            "merIden": "9103000010",
            "merName": "سالم علي الصباج",
            "merCName": "المجد تيك",
            "merPhone1": "777690990",
            "merPhone2": "778555521",
            "merGrp": "عملاء الجنوب",
            "merStatus": "فعال",
            "merCity": "امانه العاصمة",
            "merBal": 523330,
            "merStDate": "2020-01-01",
            "merDla": 3
          },
          "for-create-request": {
            "merName": "سالم علي الصباج",
            "merCName": "المجد تيك",
            "merPhone1": "777690990",
            "merPhone2": "778555521",
            "merGrp": "عملاء الجنوب",
            "merStatus": "فعال",
            "merCity": "امانه العاصمة",
            "merBal": 523330,
            "merStDate": "2020-01-01",
            "merDla": 2
          },
          "for-update-request": {
            "merCode": 1023,
            "merIden": "string",
            "merName": "string",
            "merCName": "string",
            "merPhone1": "stringstr",
            "merPhone2": "string",
            "merStatus": 0,
            "merCity": 0,
            "merDla": 0
          }
        },
        "properties": {
          "merCode": {
            "type": "number"
          },
          "merIden": {
            "type": "string",
            "description": "Merchant Iden."
          },
          "merName": {
            "type": "string",
            "description": "Merchant full name."
          },
          "merCName": {
            "type": "string",
            "description": "Merchant corp. name"
          },
          "merPhone1": {
            "type": "string",
            "description": "Merchant primary mobile phone no.",
            "pattern": "^[0-9]",
            "minLength": 9,
            "maxLength": 15
          },
          "merPhone2": {
            "type": "string",
            "description": "Merchant secondry mobile phone no."
          },
          "merGrp": {
            "type": "string",
            "description": "Merchant group"
          },
          "merStatus": {
            "type": "integer",
            "description": "Merchant account status (active / inactive)"
          },
          "merCity": {
            "type": "integer",
            "description": "Merchant city."
          },
          "merBal": {
            "type": "number",
            "description": "Merchant current balance"
          },
          "merStDate": {
            "type": "string",
            "description": "Merchant account start date"
          },
          "merDla": {
            "type": "integer",
            "description": "Merchant Distrabution layer (level of privilages)",
            "enum": [
              1,
              2,
              3,
              4,
              0
            ],
            "example": 3,
            "minimum": 0,
            "maximum": 4,
            "format": "int32"
          }
        },
        "required": [
          "merName",
          "merCName",
          "merPhone1",
          "merCity",
          "merDla"
        ]
      },
      "TopupTrx": {
        "title": "TopupTrxView",
        "type": "object",
        "properties": {
          "traCode": {
            "type": "string"
          },
          "traDate": {
            "type": "string",
            "description": "Tran Date"
          },
          "traOpe": {
            "type": "string"
          },
          "traOse": {
            "type": "string"
          },
          "traIte": {
            "type": "string"
          },
          "traDen": {
            "type": "string"
          },
          "traAmt": {
            "type": "string"
          },
          "traCst": {
            "type": "string"
          },
          "traSt": {
            "type": "string"
          },
          "traSub": {
            "type": "string"
          },
          "traTco": {
            "type": "string"
          }
        }
      },
      "TerminalDevice": {
        "title": "TerminalDevice",
        "type": "object",
        "properties": {
          "uuid": {
            "type": "string",
            "minLength": 6,
            "maxLength": 64,
            "description": "Terminal Device SerialNo/IMEI or Browser UUID. \nit must begin with prefix:\nif uuid > U\nif seril> S\nif IMEI > I",
            "pattern": "^([I,U,S][A-Z a-z 0-9])"
          },
          "mod": {
            "type": "string",
            "description": "Terminal Device  Model."
          },
          "bra": {
            "type": "string",
            "description": "Terminal Device Brand."
          },
          "osy": {
            "type": "string",
            "description": "Terminal Device Operating System."
          },
          "osv": {
            "type": "string",
            "description": "Terminal Device OS version."
          },
          "lng": {
            "type": "string",
            "description": "Termminal device language."
          },
          "isRooted": {
            "type": "boolean",
            "description": "Is device rooted/jilyBreaked"
          },
          "md5": {
            "type": "string",
            "description": "md5 of all info. ex: (md5(uuid;mod;bra;.....etc)."
          }
        },
        "required": [
          "uuid",
          "mod",
          "bra",
          "osy",
          "osv",
          "lng"
        ]
      },
      "TranRequest": {
        "description": "",
        "type": "object",
        "properties": {
          "tco": {
            "type": "number"
          },
          "tda": {
            "type": "object",
            "properties": {
              "ref": {
                "type": "string",
                "minLength": 1
              },
              "itm": {
                "type": "number"
              },
              "amt": {
                "type": "number"
              },
              "cst": {
                "type": "number"
              },
              "den": {
                "type": "string"
              },
              "rem": {
                "type": "string",
                "minLength": 1
              },
              "pri": {
                "type": "number"
              },
              "ccy": {
                "type": "string",
                "minLength": 1
              },
              "fee": {
                "type": "number"
              },
              "tot": {
                "type": "number"
              },
              "sen": {
                "type": "string",
                "minLength": 1
              },
              "spc": {
                "type": "object",
                "properties": {},
                "required": []
              }
            },
            "required": [
              "ref",
              "itm",
              "amt",
              "cst",
              "den",
              "rem",
              "pri",
              "ccy",
              "fee",
              "tot",
              "sen",
              "spc"
            ]
          },
          "tac": {
            "type": "object",
            "properties": {
              "acc": {
                "type": "string",
                "minLength": 1
              },
              "exr": {
                "type": "number"
              },
              "amt": {
                "type": "number"
              }
            },
            "required": [
              "acc",
              "exr",
              "amt"
            ]
          },
          "sndr": {
            "type": "object",
            "properties": {},
            "required": []
          },
          "rcvr": {
            "type": "object",
            "properties": {
              "acc": {
                "type": "string",
                "minLength": 1
              },
              "amt": {
                "type": "number"
              },
              "ccy": {
                "type": "string",
                "minLength": 1
              },
              "pam": {
                "type": "string",
                "minLength": 1
              },
              "info": {
                "type": "object",
                "properties": {},
                "required": []
              }
            },
            "required": [
              "acc",
              "amt",
              "ccy",
              "pam",
              "info"
            ]
          }
        },
        "required": [
          "tco",
          "tda",
          "tac",
          "sndr",
          "rcvr"
        ],
        "title": ""
      }
    },
    "securitySchemes": {
      "Auth. Token": {
        "type": "apiKey",
        "in": "header",
        "name": "auth-token",
        "description": "vvvvvvvvvvvvvv"
      },
      "Termainl Info": {
        "name": "term-info",
        "type": "apiKey",
        "in": "header",
        "description": "must sent with every request and will contian app uniqe info (appId +':'+ appVersion +':'+ termType)"
      },
      "Session Info": {
        "name": "sess-info",
        "type": "apiKey",
        "in": "header",
        "description": "Used to send session info which is a string consist of  (UserLogin + ':' + TermId)"
      }
    }
  },
  "security": [
    {
      "Auth. Token": []
    },
    {
      "Termainl Info": []
    },
    {
      "Session Info": []
    }
  ],
  "tags": [
    {
      "name": "init"
    },
    {
      "name": "Auth"
    },
    {
      "name": "auth"
    },
    {
      "name": "Merchants"
    },
    {
      "name": "finiacial"
    },
    {
      "name": "User"
    },
    {
      "name": "profile"
    }
  ]
}